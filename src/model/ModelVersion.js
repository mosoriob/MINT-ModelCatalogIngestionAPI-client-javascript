/**
 * Model Catalog
 * This is MINT Model Catalog You can find out more about     Model Catalog at [https://w3id.org/mint/modelCatalog/](https://w3id.org/mint/modelCatalog/)
 *
 * OpenAPI spec version: 0.0.2
 * Contact: mosorio@isi.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelConfiguration from './ModelConfiguration';

/**
 * The ModelVersion model module.
 * @module model/ModelVersion
 * @version 0.0.2
 */
class ModelVersion {
    /**
     * Constructs a new <code>ModelVersion</code>.
     * @alias module:model/ModelVersion
     * @param id {String} 
     */
    constructor(id) { 
        
        ModelVersion.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ModelVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelVersion} obj Optional instance to populate.
     * @return {module:model/ModelVersion} The populated <code>ModelVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelVersion();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], ['String']);
            }
            if (data.hasOwnProperty('hasDocumentation')) {
                obj['hasDocumentation'] = ApiClient.convertToType(data['hasDocumentation'], ['String']);
            }
            if (data.hasOwnProperty('hasVersionId')) {
                obj['hasVersionId'] = ApiClient.convertToType(data['hasVersionId'], 'String');
            }
            if (data.hasOwnProperty('hasConfiguration')) {
                obj['hasConfiguration'] = ApiClient.convertToType(data['hasConfiguration'], [ModelConfiguration]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
ModelVersion.prototype['id'] = undefined;

/**
 * @member {String} label
 */
ModelVersion.prototype['label'] = undefined;

/**
 * @member {Array.<String>} type
 */
ModelVersion.prototype['type'] = undefined;

/**
 * @member {Array.<String>} hasDocumentation
 */
ModelVersion.prototype['hasDocumentation'] = undefined;

/**
 * @member {String} hasVersionId
 */
ModelVersion.prototype['hasVersionId'] = undefined;

/**
 * @member {Array.<module:model/ModelConfiguration>} hasConfiguration
 */
ModelVersion.prototype['hasConfiguration'] = undefined;

/**
 * @member {String} description
 */
ModelVersion.prototype['description'] = undefined;






export default ModelVersion;

